<Window x:Class="EmojiManager.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="设置"
        Height="500" Width="600"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResize"
        MinHeight="450" MinWidth="500"
        Background="#1e1e1e"
        WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <Style x:Key="GroupBoxStyle" TargetType="GroupBox">
            <Setter Property="Foreground" Value="#e0e0e0"/>
            <Setter Property="BorderBrush" Value="#444444"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="#2d2d2d" CornerRadius="4,4,0,0" Padding="8,4">
                                <ContentPresenter ContentSource="Header" TextElement.FontWeight="Bold"/>
                            </Border>
                            <Border Grid.Row="1" Background="#262626" BorderBrush="#444444" BorderThickness="1" CornerRadius="0,0,4,4" Padding="10">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="#e0e0e0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#3c3c3c"/>
            <Setter Property="Foreground" Value="#e0e0e0"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0078d4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="3"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#106ebe"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#005a9e"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#555555"/>
                    <Setter Property="Foreground" Value="#999999"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StatusTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#ffa500"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="10">
                <!-- 表情包路径设置 -->
                <GroupBox Header="表情包路径" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="路径:" Style="{StaticResource LabelStyle}"/>
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtEmojiPath" 
                               Style="{StaticResource TextBoxStyle}" Margin="5,0"/>
                        <Button Grid.Row="0" Grid.Column="2" Content="浏览..." 
                              Style="{StaticResource ButtonStyle}" 
                              Click="BrowseEmojiPath_Click" Margin="10,0,0,0"/>

                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" 
                                 Text="选择包含表情包图片的根目录"
                                 Foreground="#999999" FontSize="11" Margin="5,5,0,0"/>
                    </Grid>
                </GroupBox>

                <!-- 快捷键设置 -->
                <GroupBox Header="快捷键设置" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="当前快捷键:" Style="{StaticResource LabelStyle}"/>
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtHotkey" 
                               Style="{StaticResource TextBoxStyle}" 
                               IsReadOnly="True" Margin="5,0"
                               Text="按下按钮开始录制..."/>
                        <Button Grid.Row="0" Grid.Column="2" x:Name="btnCaptureHotkey" 
                              Content="录制快捷键" 
                              Style="{StaticResource ButtonStyle}" 
                              Click="CaptureHotkey_Click" Margin="10,0,0,0"/>

                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" 
                                 x:Name="txtHotkeyStatus" 
                                 Style="{StaticResource StatusTextStyle}"/>

                        <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" 
                                 Text="点击录制快捷键按钮，然后按下您想要的组合键"
                                 Foreground="#999999" FontSize="11" Margin="5,5,0,0"/>

                        <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" 
                                  Orientation="Horizontal" Margin="5,15,0,0">
                            <Button Content="重置为F12" Style="{StaticResource ButtonStyle}" 
                                  Click="ResetHotkey_Click" Margin="0,0,15,0"/>
                            <Button Content="测试快捷键" Style="{StaticResource ButtonStyle}" 
                                  Click="TestHotkey_Click"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- 最近表情设置 -->
                <GroupBox Header="最近使用表情" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="记录数量上限:" Style="{StaticResource LabelStyle}"/>
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtRecentLimit" 
                               Style="{StaticResource TextBoxStyle}" 
                               Text="20" Margin="5,0"/>
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="个" 
                                 Foreground="#e0e0e0" VerticalAlignment="Center" Margin="5,0"/>

                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" 
                                 Text="最近使用的表情会显示在分组列表最顶端（设置为0表示关闭功能）"
                                 Foreground="#999999" FontSize="11" Margin="5,5,0,0"/>

                        <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" 
                              Content="清空最近使用记录" 
                              Click="ClearRecentEmojis_Click" 
                              HorizontalAlignment="Left" 
                              Margin="5,15,0,0">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                                    <Setter Property="Background" Value="#d13438"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#e13438"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="#c13438"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </GroupBox>

                <!-- 图片排序设置 -->
                <GroupBox Header="图片排序" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <CheckBox Grid.Row="0" x:Name="chkSortByTime" 
                                Content="按创建时间排序（从最新到最老）" 
                                Foreground="#e0e0e0" 
                                Margin="5" 
                                FontSize="12">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <StackPanel Orientation="Horizontal">
                                                    <Border x:Name="checkBoxBorder" 
                                                            Width="16" Height="16" 
                                                            Background="#3c3c3c" 
                                                            BorderBrush="#555" 
                                                            BorderThickness="1" 
                                                            CornerRadius="2" 
                                                            Margin="0,0,8,0">
                                                        <Path x:Name="checkMark" 
                                                              Data="M2,6 L6,10 L14,2" 
                                                              Stroke="#0078d4" 
                                                              StrokeThickness="2" 
                                                              Visibility="Collapsed"/>
                                                    </Border>
                                                    <ContentPresenter VerticalAlignment="Center"/>
                                                </StackPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="#0078d4"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <TextBlock Grid.Row="1" 
                                 Text="开启后，每个文件夹中的图片将按创建时间而不是文件名排序"
                                 Foreground="#999999" FontSize="11" Margin="5,0,5,10"
                                 TextWrapping="Wrap"/>
                    </Grid>
                </GroupBox>

                <!-- 文件名搜索功能 -->
                <GroupBox Header="文件名搜索" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <CheckBox Grid.Row="0" x:Name="chkEnableFilenameSearch" 
                                Content="启用按文件名搜索功能" 
                                Foreground="#e0e0e0" 
                                Margin="5" 
                                FontSize="12">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <StackPanel Orientation="Horizontal">
                                                    <Border x:Name="checkBoxBorder" 
                                                            Width="16" Height="16" 
                                                            Background="#3c3c3c" 
                                                            BorderBrush="#555" 
                                                            BorderThickness="1" 
                                                            CornerRadius="2" 
                                                            Margin="0,0,8,0">
                                                        <Path x:Name="checkMark" 
                                                              Data="M2,6 L6,10 L14,2" 
                                                              Stroke="#0078d4" 
                                                              StrokeThickness="2" 
                                                              Visibility="Collapsed"/>
                                                    </Border>
                                                    <ContentPresenter VerticalAlignment="Center"/>
                                                </StackPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="#0078d4"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <TextBlock Grid.Row="1" 
                                 Text="开启后，程序将允许根据图片文件名进行搜索过滤"
                                 Foreground="#999999" FontSize="11" Margin="5,0,5,5"
                                 TextWrapping="Wrap"/>

                        <TextBlock Grid.Row="2" 
                                 Text="⚠️ 注意：此功能主要适用于文件名有意义的表情包（如'陪笑.jpg'、'喜欢.gif'）"
                                 Foreground="#ffa500" FontSize="11" Margin="5,0,5,5"
                                 TextWrapping="Wrap"/>

                        <TextBlock Grid.Row="3" 
                                 Text="如果您的表情文件是QQ默认的32位MD5名称，建议保持关闭以避免搜索混乱"
                                 Foreground="#999999" FontSize="11" Margin="5,0,5,10"
                                 TextWrapping="Wrap"/>
                    </Grid>
                </GroupBox>

                <!-- 图片格式修正 -->
                <GroupBox Header="图片格式修正" Style="{StaticResource GroupBoxStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" 
                                 Text="检测并修正表情包目录下文件的错误扩展名（如QQNT导致的.null、.jpg标记GIF等问题）"
                                 Foreground="#e0e0e0" FontSize="12" Margin="5"
                                 TextWrapping="Wrap"/>

                        <Button Grid.Row="1" x:Name="btnCorrectExtensions"
                              Content="开始修正文件扩展名" 
                              Click="CorrectExtensions_Click" 
                              HorizontalAlignment="Left" 
                              Margin="5,15,0,0"
                              Style="{StaticResource ButtonStyle}"/>

                        <TextBlock Grid.Row="2" x:Name="txtCorrectionStatus"
                                 Foreground="#999999" FontSize="11" Margin="5,5,0,0"
                                 Text="修正过程会检测每个文件的实际格式并重命名为正确的扩展名"
                                 TextWrapping="Wrap"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>

        <!-- 底部按钮 -->
        <Border Grid.Row="1" Background="#2d2d2d" BorderBrush="#444444" BorderThickness="0,1,0,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,15">
                <Button Content="确定" Style="{StaticResource ButtonStyle}" 
                      Click="OK_Click" Margin="0,0,15,0" MinWidth="90"/>
                <Button Content="取消" Click="Cancel_Click" MinWidth="90" Margin="0">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                            <Setter Property="Background" Value="#666666"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#777777"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#555555"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</Window> 